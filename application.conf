deepdive {

  db.default {
    driver   : "org.postgresql.Driver"
    url      : "jdbc:postgresql://"${PGHOST}":"${PGPORT}"/"${DBNAME}
    user     : ${PGUSER}
    password : ${PGPASSWORD}
    dbname   : ${DBNAME}
    host     : ${PGHOST}
    port     : ${PGPORT}
  }

  # Put your variables here
  schema.variables {
    bodysize.is_correct : Boolean
  }

  # Put your extractors here
  extraction.extractors {

    clean_up {
      style: "sql_extractor"
      sql: """
        TRUNCATE mentions;
      """
    }

    ext_fossil_mentions {
      input: """
        SELECT docid AS "sentence.docid",
               sentid AS "sentence.sentid",
               array_agg(word ORDER BY wordid::int) AS "sentence.words"
        FROM words 
        GROUP BY docid, sentid
        """
      output_relation: "mentions"
      #udf: "util/extractor_input_writer.py /tmp/sentences.txt"
      udf: ${APP_HOME}"/udf/ext_taxon.py"
      parallelism: 1
      dependencies: ["clean_up"]
    }


    ext_candidates {

      style: "sql_extractor"
      sql: """
        TRUNCATE bodysize;
        INSERT INTO bodysize
        SELECT DISTINCT t0.docid, t0.word, t1.figurename, t1.label, t1.major, t1.minor, t2.mag F
        FROM mentions t0, figures t1, captions t2 
        WHERE t0.docid=t1.docid AND 
              t1.docid=t2.docid AND 
              t2.figure=t1.figurename AND 
              lower(t0.word)=lower(t2.phrase);
      """
      dependencies: ["ext_fossil_mentions"]
    }

  }

  # Put your inference rules here
  inference.factors {

    f_pretty_sure {
      input_query: """
        SELECT  bodysize.id AS "bodysize.id", 
                bodysize.is_correct AS "bodysize.is_correct"
        FROM    bodysize 
        """
      function: "IsTrue(bodysize.is_correct)"
      weight: "10"
    }

    
  }

  # Specify a holdout fraction
  calibration.holdout_fraction: 0

}
